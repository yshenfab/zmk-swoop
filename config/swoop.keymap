/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*                              36 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────┬────────────────────╮ ╭─────────────────────┬─────────────────────╮
  │  0   1   2   3   4 │  5   6   7   8   9 │ │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ │ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
  │ 20  21  22  23  24 │ 25  26  27  28  29 │ │ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ 30  31  32 │ 33  34  35 ╭───────╯ ╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
          ╰────────────┴────────────╯                 ╰─────────────┴─────────────╯             */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro (CAGS for MacOS)

#define HRML(k1,k2,k3,k4) &thm LCTRL k1  &thm LALT k2  &thm LGUI k3  &thm LSHFT k4
#define HRMR(k1,k2,k3,k4) &thm RSHFT k1  &thm RGUI k2  &thm RALT k3  &thm RCTRL k4

/ {
    behaviors {
        // timeless homerow mods

        thm: timeless_homerow_mods {
            label = "timeless_homerow_mods";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>; // repeat on tap-into-hold
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release; // delay positional check until key-release
        };

        // layer-tap for thumb keys

        mlt: my_layer_tap {
            label = "my_layer_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>; // repeat on tap-into-hold
            require-prior-idle-ms = <120>;
            bindings = <&mo>, <&kp>;

            hold-trigger-on-release; // delay positional check until key-release
        };
    };

    combos {
        compatible = "zmk,combos";

        // [
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };

        // ]
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };

        // {
        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LBRC>;
            layers = <0>;
        };

        // }
        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp RBRC>;
            layers = <0>;
        };

        // (
        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <3 4>;
        };

        // )
        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <5 6>;
        };

        // `
        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <20 21>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // -
        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <21 22>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // _
        combo_under {
            bindings = <&kp UNDER>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // =
        combo_equal {
            bindings = <&kp EQUAL>;
            key-positions = <26 27>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // +
        combo_plus {
            bindings = <&kp PLUS>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // ~
        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <28 29>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // C-SPC
        combo_c_spc {
            bindings = <&kp LC(SPACE)>;
            key-positions = <10 11>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // C-S-TAB
        combo_tab_prev {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <11 12>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // C-TAB
        combo_tab_next {
            bindings = <&kp LC(TAB)>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            layers = <0>;
        };

        // - [ ]
        combo_todo {
            bindings = <&todo>;
            key-positions = <14 15>; // gh
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_gmail {
            bindings = <&gmail>;
            key-positions = <14 26>; // gm
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_email {
            bindings = <&email>;
            key-positions = <2 26 10>; // ema
            timeout-ms = <40>;
            layers = <0>;
        };

        combo_tel {
            bindings = <&tel>;
            key-positions = <4 2 18>; // tel
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_mobile {
            bindings = <&mobile>;
            key-positions = <24 26 8>; // mob
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_name {
            bindings = <&name>;
            key-positions = <5 11>; // ys
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_uts {
            bindings = <&uts>;
            key-positions = <6 4 11>; // uts
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_sid {
            bindings = <&sid>;
            key-positions = <7 12>; // id
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    macros {
        todo: todo {
            compatible = "zmk,behavior-macro";
            label = "TODO";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&kp MINUS &kp SPACE &kp LBKT &kp SPACE &kp RBKT &kp SPACE>;
        };

        gmail: gmail {
            compatible = "zmk,behavior-macro";
            label = "GMAIL";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp Y &kp S &kp H &kp E &kp N &kp F &kp A &kp B &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        name: name {
            compatible = "zmk,behavior-macro";
            label = "YS";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&kp LS(Y) &kp A &kp N &kp G &kp SPACE &kp LS(S) &kp H &kp E &kp N>;
        };

        uts: uts {
            compatible = "zmk,behavior-macro";
            label = "UTS";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LS(U) &kp N &kp I &kp V &kp E &kp R &kp S &kp I &kp T &kp Y &kp SPACE &kp O &kp F &kp SPACE &kp LS(T) &kp E &kp C &kp H &kp N &kp O &kp L &kp O &kp G &kp Y &kp SPACE &kp LS(S) &kp Y &kp D &kp N &kp E &kp Y>;
        };

        sid: sid {
            compatible = "zmk,behavior-macro";
            label = "SID";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&kp N1 &kp N3 &kp N9 &kp N4 &kp N6 &kp N6 &kp N1 &kp N9>;
        };

        email: email {
            compatible = "zmk,behavior-macro";
            label = "EMAIL";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LS(Y) &kp A &kp N &kp G &kp DOT &kp LS(S) &kp H &kp E &kp N &kp MINUS &kp N9 &kp AT &kp S &kp T &kp U &kp D &kp E &kp N &kp T &kp DOT &kp U &kp T &kp S &kp DOT &kp E &kp D &kp U &kp DOT &kp A &kp U>;
        };

        mobile: mobile {
            compatible = "zmk,behavior-macro";
            label = "MOBILE";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&kp N0 &kp N4 &kp N7 &kp N8 &kp N2 &kp N4 &kp N8 &kp N5 &kp N4 &kp N9>;
        };

        tel: tel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N8 &kp N6 &kp N8 &kp N2 &kp N2 &kp N1 &kp N1 &kp N3 &kp N5 &kp N7>;
            label = "TEL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W        &kp E         &kp R         &kp T        &kp Y    &kp U         &kp I        &kp O        &kp P
&thm LCTRL A  &thm LALT S  &thm LGUI D   &thm LSHFT F  &kp G        &kp H    &thm RSHFT J  &thm RGUI K  &thm RALT L  &thm RCTRL SEMI
&kp Z         &kp X        &kp C         &kp V         &kp B        &kp N    &kp M         &kp COMMA    &kp DOT      &kp FSLH
                           &mt LGUI ESC  &mlt 1 TAB    &kp SPACE    &kp RET  &mlt 2 BSPC   &kp SQT
            >;
        };

        lower_layer {
            bindings = <
&kp F1           &kp F2        &kp F3      &kp F4                &kp F5                  &kp F6     &kp F7    &kp F8     &kp F9     &kp F10
&kp C_VOLUME_UP  &kp C_VOL_DN  &kp K_MUTE  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC    &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &kp F11
&kp C_PREV       &kp C_NEXT    &kp C_PLAY  &trans                &trans                  &kp HOME   &kp END   &kp PG_UP  &kp PG_DN  &kp F12
                               &kp LGUI    &trans                &kp RETURN              &kp SPACE  &mo 3     &trans
            >;
        };

        raise_layer {
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0
&kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR
&kp GRAVE  &kp MINUS  &kp UNDER  &kp BSLH  &kp PIPE     &kp SQT    &kp DQT   &kp EQUAL  &kp PLUS  &kp TILDE
                      &kp LGUI   &mo 3     &kp SPACE    &kp RET    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp N7  &kp N8  &kp N9  &trans
&bootloader   &trans        &trans        &trans        &trans          &trans  &kp N4  &kp N5  &kp N6  &kp N0
&bt BT_CLR    &trans        &trans        &trans        &trans          &trans  &kp N1  &kp N2  &kp N3  &trans
                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
